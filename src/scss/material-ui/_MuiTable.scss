.MuiTable {
    &-striped {
        tbody {
            tr:nth-of-type(odd) {
                td {
                    background-color: $table-striped-bg-color;
                }
            }
        }
    }

    &-bordered {
        tbody {
            tr:not(:last-of-type) {
                td {
                    border-bottom: 0.1rem solid $border-color;
                }
            }
        }
    }
}

.MuiTableHead {
    &-root {
        .MuiTableCell-root {
            background-color: $table-header-bg-color;
            color: $table-header-color;
            font-size: $table-header-font-size;
            font-weight: $table-header-font-weight;
            border-bottom: $table-header-border-bottom;
        }
    }
}

.MuiTableCell {
    $this: &;

    &-root {
        box-sizing: border-box;
        font-family: inherit;
        font-size: inherit;
        line-height: inherit;
        color: inherit;
        padding: $table-cell-padding-y $table-cell-padding-x;
        height: $table-cell-medium-min-height;
        border: 0;

        & #{$this}-truncatedContainer {
            display: table;
            table-layout: fixed;
            width: 100%;
        }

        & #{$this}-truncated {
            @include truncation;
        }
    }

    &-sizeSmall {
        height: $table-cell-small-min-height;
    }

    &-paddingAction {
        &:last-of-type {
            padding-right: $table-cell-padding-x;
        }

        &:first-of-type {
            padding-left: $table-cell-padding-x;
        }

        padding: 0;
    }

    &-paddingCheckbox {
        &:last-of-type {
            padding-right: $table-cell-padding-x - $checkbox-padding;
        }

        &:first-of-type {
            padding-left: $table-cell-padding-x - $checkbox-padding;
        }

        padding: 0;
    }
}
